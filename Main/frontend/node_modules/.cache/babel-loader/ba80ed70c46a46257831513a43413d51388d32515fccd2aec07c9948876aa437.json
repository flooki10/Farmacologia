{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\walid\\\\Desktop\\\\Frama\\\\Farma\\\\Main\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Main from './components/Main';\nimport Navbar from './components/Navbar';\nimport jsPDF from 'jspdf';\nimport { buscarAlelosGen, ID_CPIC_Farmaco, fenotipoSegunAlelos, urlGuia, recomendacionClinica } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [formData, setFormData] = useState({\n    Ndehistoriaclinica: '',\n    nombre: '',\n    apellido: '',\n    genero: '',\n    Fechadenacimiento: '',\n    Enfermedad: '',\n    otrasenfermedades: '',\n    tratamiento: '',\n    genotipos: '',\n    alelo1: '',\n    alelo2: ''\n  });\n  const [resultadosData, setResultadosData] = useState({\n    Genotype: '',\n    Phenotype: '',\n    Population: '',\n    Implications: '',\n    Recommendation: '',\n    OtherConsiderations: '',\n    Classification: ''\n  });\n  console.log(formData);\n  console.log(resultadosData);\n  const [alelos, setAlelos] = useState([]);\n  const [recomendaciones, setRecomendaciones] = useState([]);\n  const [relacionesFarmacos, setRelacionesFarmacos] = useState([]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // Ejemplo de uso de la función buscarAlelosGen\n  useEffect(() => {\n    async function fetchAlelos() {\n      try {\n        const alelosGen = await buscarAlelosGen('CYP2C19'); // Reemplaza 'CYP2C19' con el gen deseado\n        setAlelos(alelosGen);\n      } catch (error) {\n        console.error('Error al obtener los alelos:', error);\n      }\n    }\n    fetchAlelos();\n  }, []);\n  useEffect(() => {\n    const obtenerDatos = async () => {\n      try {\n        // Aquí debes reemplazar 'CYP2C19' con el gen deseado\n        const alelosGen = await buscarAlelosGen('CYP2C19');\n        setAlelos(alelosGen);\n        const recomendacionesFarma = await recomendacionClinica(formData.genotipos, formData.alelo1, formData.alelo2, formData.tratamiento);\n        setRecomendaciones(recomendacionesFarma);\n      } catch (error) {\n        console.error('Error al obtener los datos:', error);\n      }\n    };\n    obtenerDatos();\n  }, [formData.genotipos, formData.alelo1, formData.alelo2, formData.tratamiento]); // Dependencias para evitar llamadas innecesarias\n\n  const [mostrarResultados, setMostrarResultados] = useState(false);\n\n  // Asumiendo que tus funciones de API devuelven promesas y que estas están correctamente implementadas\n  const obtenerResultados = async () => {\n    try {\n      // Llamadas a la API\n      const resultadosGenotipo = await buscarAlelosGen(formData.genotipos);\n      console.log(resultadosGenotipo);\n      const resultadosRecomendaciones = await recomendacionClinica(formData.genotipos, formData.alelo1, formData.alelo2, formData.tratamiento);\n      const farmacoCPIC = await ID_CPIC_Farmaco(formData.tratamiento); // Reemplaza con los argumentos correctos\n      const fenotipo = await fenotipoSegunAlelos(formData.alelo1, formData.alelo2); // Reemplaza con los argumentos correctos\n      const guia = await urlGuia(farmacoCPIC); // Reemplaza con los argumentos correctos\n\n      // Actualizar el estado\n      setResultadosData({\n        ...resultadosData,\n        Genotype: resultadosGenotipo,\n        Recommendation: resultadosRecomendaciones,\n        ID_CPIC_Farmaco: farmacoCPIC,\n        Fenotipo: fenotipo,\n        Guia: guia\n      });\n\n      // Mostrar los resultados\n      setMostrarResultados(true);\n    } catch (error) {\n      console.error('Error al obtener los resultados:', error);\n    }\n  };\n  const handleDownloadPDF = () => {\n    if (Object.values(formData).every(value => value)) {\n      // Asegurar que todos los campos están llenos\n      const pdf = new jsPDF();\n      const pacienteInfo = {\n        'Nº Historia clínica': formData.Ndehistoriaclinica,\n        'Nombre': formData.nombre,\n        'Apellido': formData.apellido,\n        'Género': formData.genero,\n        'Fecha de nacimiento': formData.Fechadenacimiento,\n        'Enfermedad Actual': formData.Enfermedad,\n        'Otras Enfermedades': formData.otrasenfermedades,\n        'Tratamiento habitual': formData.tratamiento,\n        'Genotipos': formData.genotipos,\n        'Alelo 1': formData.alelo1 || 'N/A',\n        'Alelo 2': formData.alelo2 || 'N/A',\n        ...resultadosData // Agregar los resultados al PDF\n      };\n\n      let content = 'Información del paciente:\\n\\n';\n      for (const [key, value] of Object.entries(pacienteInfo)) {\n        content += `${key}: ${value}\\n`;\n      }\n      pdf.text(content, 10, 10);\n      pdf.save('informe.pdf');\n    } else {\n      alert('Por favor, completa todos los campos del formulario antes de descargar el PDF.'); // Alerta para el usuario\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Todo\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column\",\n            children: /*#__PURE__*/_jsxDEV(Main, {\n              formData: formData,\n              handleInputChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column column-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"buttons-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: obtenerResultados,\n                children: \"Mostrar Resultados\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => handleDownloadPDF(formData),\n                children: \"Descargar PDF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 11\n          }, this), mostrarResultados && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column resultado-column\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"resultado-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"RESULTADO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"result-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Genotipo:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 17\n                  }, this), \" \", resultadosData.Genotype || 'No disponible']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"result-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Fenotipo:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 17\n                  }, this), \" \", resultadosData.Phenotype || 'No disponible']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"result-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Populaci\\xF3n:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 17\n                  }, this), \" \", resultadosData.Population]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"result-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Implicaciones:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 17\n                  }, this), \" \", resultadosData.Implications]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"result-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Recomendaci\\xF3n:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 17\n                  }, this), \" \", resultadosData.Recommendation]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"result-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Otras Consideraciones:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 17\n                  }, this), \" \", resultadosData.OtherConsiderations]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"result-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Clasificaci\\xF3n:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 17\n                  }, this), \" \", resultadosData.Classification]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xdDZlvAZU6/cJCd8rsr4bJJDEQU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Main","Navbar","jsPDF","buscarAlelosGen","ID_CPIC_Farmaco","fenotipoSegunAlelos","urlGuia","recomendacionClinica","jsxDEV","_jsxDEV","App","_s","formData","setFormData","Ndehistoriaclinica","nombre","apellido","genero","Fechadenacimiento","Enfermedad","otrasenfermedades","tratamiento","genotipos","alelo1","alelo2","resultadosData","setResultadosData","Genotype","Phenotype","Population","Implications","Recommendation","OtherConsiderations","Classification","console","log","alelos","setAlelos","recomendaciones","setRecomendaciones","relacionesFarmacos","setRelacionesFarmacos","handleInputChange","e","name","value","target","fetchAlelos","alelosGen","error","obtenerDatos","recomendacionesFarma","mostrarResultados","setMostrarResultados","obtenerResultados","resultadosGenotipo","resultadosRecomendaciones","farmacoCPIC","fenotipo","guia","Fenotipo","Guia","handleDownloadPDF","Object","values","every","pdf","pacienteInfo","content","key","entries","text","save","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/walid/Desktop/Frama/Farma/Main/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect}from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport Main from './components/Main';\r\nimport Navbar from './components/Navbar';\r\nimport jsPDF from 'jspdf';\r\n\r\nimport {\r\n  buscarAlelosGen,\r\n  ID_CPIC_Farmaco,\r\n  fenotipoSegunAlelos,\r\n  urlGuia,\r\n  recomendacionClinica,\r\n} from './api';\r\n\r\nfunction App() {\r\n  const [formData, setFormData] = useState({\r\n    Ndehistoriaclinica: '',\r\n    nombre: '',\r\n    apellido: '',\r\n    genero: '',\r\n    Fechadenacimiento: '',\r\n    Enfermedad: '',\r\n    otrasenfermedades: '',\r\n    tratamiento: '',\r\n    genotipos: '',\r\n    alelo1: '',\r\n    alelo2: '',\r\n  });\r\n\r\n  const [resultadosData, setResultadosData] = useState({\r\n    Genotype: '',\r\n    Phenotype: '',\r\n    Population: '',\r\n    Implications: '',\r\n    Recommendation: '',\r\n    OtherConsiderations: '',\r\n    Classification: '',\r\n  });\r\n\r\nconsole.log(formData);\r\nconsole.log(resultadosData);\r\n\r\n\r\n  const [alelos, setAlelos] = useState([]);\r\n  const [recomendaciones, setRecomendaciones] = useState([]);\r\n  const [relacionesFarmacos, setRelacionesFarmacos] = useState([]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // Ejemplo de uso de la función buscarAlelosGen\r\n  useEffect(() => {\r\n    async function fetchAlelos() {\r\n      try {\r\n        const alelosGen = await buscarAlelosGen('CYP2C19'); // Reemplaza 'CYP2C19' con el gen deseado\r\n        setAlelos(alelosGen);\r\n      } catch (error) {\r\n        console.error('Error al obtener los alelos:', error);\r\n      }\r\n    }\r\n\r\n    fetchAlelos();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const obtenerDatos = async () => {\r\n      try {\r\n        // Aquí debes reemplazar 'CYP2C19' con el gen deseado\r\n        const alelosGen = await buscarAlelosGen('CYP2C19');\r\n        setAlelos(alelosGen);\r\n\r\n        const recomendacionesFarma = await recomendacionClinica(formData.genotipos, formData.alelo1, formData.alelo2, formData.tratamiento);\r\n        setRecomendaciones(recomendacionesFarma);\r\n\r\n      } catch (error) {\r\n        console.error('Error al obtener los datos:', error);\r\n      }\r\n    };\r\n\r\n    obtenerDatos();\r\n  }, [formData.genotipos, formData.alelo1, formData.alelo2, formData.tratamiento]); // Dependencias para evitar llamadas innecesarias\r\n\r\n  const [mostrarResultados, setMostrarResultados] = useState(false);\r\n\r\n  // Asumiendo que tus funciones de API devuelven promesas y que estas están correctamente implementadas\r\nconst obtenerResultados = async () => {\r\n  try {\r\n    // Llamadas a la API\r\n    const resultadosGenotipo = await buscarAlelosGen(formData.genotipos);\r\n    console.log(resultadosGenotipo);\r\n    const resultadosRecomendaciones = await recomendacionClinica(formData.genotipos, formData.alelo1, formData.alelo2, formData.tratamiento);\r\n    const farmacoCPIC = await ID_CPIC_Farmaco(formData.tratamiento); // Reemplaza con los argumentos correctos\r\n    const fenotipo = await fenotipoSegunAlelos(formData.alelo1, formData.alelo2); // Reemplaza con los argumentos correctos\r\n    const guia = await urlGuia(farmacoCPIC); // Reemplaza con los argumentos correctos\r\n    \r\n    // Actualizar el estado\r\n    setResultadosData({\r\n      ...resultadosData,\r\n      Genotype: resultadosGenotipo,\r\n      Recommendation: resultadosRecomendaciones,\r\n      ID_CPIC_Farmaco: farmacoCPIC,\r\n      Fenotipo: fenotipo,\r\n      Guia: guia,\r\n    });\r\n\r\n    // Mostrar los resultados\r\n    setMostrarResultados(true);\r\n  } catch (error) {\r\n    console.error('Error al obtener los resultados:', error);\r\n  }\r\n};\r\n\r\n\r\n  \r\n  const handleDownloadPDF = () => {\r\n    if (Object.values(formData).every(value => value)) { // Asegurar que todos los campos están llenos\r\n      const pdf = new jsPDF();\r\n      const pacienteInfo = {\r\n        'Nº Historia clínica': formData.Ndehistoriaclinica,\r\n        'Nombre': formData.nombre,\r\n        'Apellido': formData.apellido,\r\n        'Género': formData.genero,\r\n        'Fecha de nacimiento': formData.Fechadenacimiento,\r\n        'Enfermedad Actual': formData.Enfermedad,\r\n        'Otras Enfermedades': formData.otrasenfermedades,\r\n        'Tratamiento habitual': formData.tratamiento,\r\n        'Genotipos': formData.genotipos,\r\n        'Alelo 1': formData.alelo1 || 'N/A',\r\n        'Alelo 2': formData.alelo2 || 'N/A',\r\n        ...resultadosData, // Agregar los resultados al PDF\r\n      };\r\n\r\n      let content = 'Información del paciente:\\n\\n';\r\n      for (const [key, value] of Object.entries(pacienteInfo)) {\r\n        content += `${key}: ${value}\\n`;\r\n      }\r\n\r\n      pdf.text(content, 10, 10);\r\n      pdf.save('informe.pdf');\r\n    } else {\r\n      alert('Por favor, completa todos los campos del formulario antes de descargar el PDF.'); // Alerta para el usuario\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n      <div className=\"Todo\">\r\n      <div className=\"main-content\">\r\n        <div className=\"row\">\r\n          <div className=\"column\">\r\n            <Main formData={formData} handleInputChange={handleInputChange} />\r\n          </div>\r\n          <div className=\"column column-center\">\r\n            <div className=\"buttons-container\">\r\n            <button type=\"button\" onClick={obtenerResultados}>Mostrar Resultados</button>\r\n              <button type=\"button\" onClick={() => handleDownloadPDF(formData)}>Descargar PDF</button>\r\n            </div>\r\n          </div>\r\n          \r\n          {mostrarResultados && (\r\n        <div className=\"column resultado-column\">\r\n          <div className=\"resultado-container\">\r\n            <h2>RESULTADO</h2>\r\n\r\n            <div className=\"result-details\">\r\n              <p className=\"result-section\">\r\n                <strong>Genotipo:</strong> {resultadosData.Genotype || 'No disponible'}\r\n              </p>\r\n              <p className=\"result-section\">\r\n                <strong>Fenotipo:</strong> {resultadosData.Phenotype || 'No disponible'}\r\n              </p>\r\n              <p className=\"result-section\">\r\n                <strong>Populación:</strong> {resultadosData.Population}\r\n              </p>\r\n              <p className=\"result-section\">\r\n                <strong>Implicaciones:</strong> {resultadosData.Implications}\r\n              </p>\r\n              <p className=\"result-section\">\r\n                <strong>Recomendación:</strong> {resultadosData.Recommendation}\r\n              </p>\r\n              <p className=\"result-section\">\r\n                <strong>Otras Consideraciones:</strong> {resultadosData.OtherConsiderations}\r\n              </p>\r\n              <p className=\"result-section\">\r\n                <strong>Clasificación:</strong> {resultadosData.Classification}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n  \r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}